name: Add roadmap issues to yizha1roadmap project

on:
  issues:
    types: [labeled]
  workflow_dispatch:
    inputs:
      issue:
        description: Issue number to add manually
        required: false

permissions:
  contents: read
  issues: read
  projects: write

jobs:
  add-to-project:
    # Run if roadmap label was added, or manual dispatch provided an issue number
    if: |
      (github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'roadmap')) ||
      (github.event_name == 'workflow_dispatch' && inputs.issue != '')
    runs-on: ubuntu-latest
    env:
      PROJECT_V2_ID: PVT_kwHOBm66KM4ADZpE
    steps:
      - name: Resolve issue node ID
        id: issue
        uses: actions/github-script@v7
        with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              let issueNumber;
              if (context.eventName === 'workflow_dispatch') {
                issueNumber = parseInt(core.getInput('issue'), 10);
              } else {
                issueNumber = context.payload.issue.number;
              }
              core.info(`Target issue #${issueNumber}`);
              const { data: issue } = await github.rest.issues.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber
              });
              core.setOutput('number', issueNumber.toString());
              core.setOutput('node_id', issue.node_id);
      - name: Add item to Project V2
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const projectId = process.env.PROJECT_V2_ID;
            const issueNodeId = "${{ steps.issue.outputs.node_id }}";
            const mutation = `mutation($project:ID!,$content:ID!){
              addProjectV2ItemById(input:{projectId:$project, contentId:$content}){
                item { id }
              }
            }`;
            try {
              const result = await github.graphql(mutation, { project: projectId, content: issueNodeId });
              core.info(`Added item: ${JSON.stringify(result)}`);
            } catch (e) {
              core.warning(`Add attempt failed (maybe already added): ${e.message}`);
            }
      - name: Comment confirmation
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: parseInt("${{ steps.issue.outputs.number }}", 10),
              body: `âœ… Automatically added to Project (ID: ${process.env.PROJECT_V2_ID}).`
            })
